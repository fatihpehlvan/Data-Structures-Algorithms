import java.io.*;
import java.util.ArrayList;
import java.util.Map;
import java.util.SortedMap;

/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;

    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        // TODO: YOUR CODE HERE
        File file = new File(filename);
        System.out.println("Started scanning...");
        try (BufferedReader br = new BufferedReader(new FileReader(file)))
        {
            FileWriter myWriter = new FileWriter("scanLog.txt");


            String line;
            int count = 0;
            int lineNumber = 0;
            while ((line = br.readLine()) != null) {
                lineNumber++;
                String hash = turbo64(line);
                if (malwareDB.containsKey(hash)){
                    System.out.println("--------------------------------------------------------------------------------\n" +
                            "Detected malware!");
                    System.out.println(malwareDB.get(hash));
                    count++;
                    myWriter.write(hash + "@" + lineNumber + "\n");
                }

            }
            System.out.println("--------------------------------------------------------------------------------\n" +
                    "Scan complete! " + count + " threats are found and eliminated. Generating log file...");

            myWriter.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    public static String turbo64(String in) {
        // Implement turbo64 algorithm given by the assignment instructions
        // TODO: YOUR CODE HERE
        long MOD_TURBO = 4294967291L;
        long a = 0L;
        long b = 1L;
        for (int i = 0; i < in.length(); i++){
            a = (a + (in.charAt(i))) % MOD_TURBO;
            b = (a + b) % MOD_TURBO;
        }
        return Long.toHexString((b << 32) | a);
    }
}
